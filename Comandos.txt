Actividad 1

1.Instalar MongoDB en ambiente local.
2.Conectarse a MongoDB vía CLI.
3.Crear una nueva base de datos.
	> use animals
	> show dbs

4.Crear una nueva collection.
	> db.createCollection("domestic")

5.Insertar 5 documentos en la collection con datos básicos.
	> db.domestic.insert({name: "Perro", race: "Dalmata"})
	> db.domestic.insert({name: "Gato", race: "Egipcio", color: "Rosado" })
	> db.domestic.insert({name: "Perro", race: "Caniche"})
	> db.domestic.insert({name: "Perro", race: "Chihuahua"})
	> db.domestic.insert({name: "Perro", race: "Bull Terrier", color: "Negro"})

6.Listar todos los documentos de la collection.
	> db.domestic.find()

7.Crear otras collections con documentos.
	> db.createCollection("bichos")
	> db.bichos.insert({name: "Araña", color: "Naraja y negro"})db.bichos.insert({name: "Araña", color: "Naraja y negro"})
	> db.bichos.insert({name: "Hormiga", color: "Roja"})

Actividad 2

1.Crear una nueva base de datos de un sistema de streaming de video (ej. Netflix, Flow, Amazon Prime),
que permita almacenar movies.
	> use DisneyPlus
	> db.createCollection("movies")

2.Para cada movie, se debería guardar información
como título (String), year (Number), rating (Number, entre 1.0 y 5.0),
genre (String), description (String), actors (Array), country (String), 
income (Number), duration (Number).

3.Agregar películas usando insert(), insertOne() & insertMany().

> db.movies.insert([
    {
        "titulo": "Coco",
        "year": 27 de octubre de 2017,
        "rating": 5.0,
        "genre": "Animación/Infantil",
        "description": "Miguel es un niño que sueña con ser músico, pero su familia se lo prohíbe porque su tatarabuelo..",
        "actors": ["Anthony Gonzalez", " Benjamin Bratt"],
        "country": "Mexico",
        "income": 50000,
        "duration": 110
    },
    {
        "titulo": "El diablo a todas horas",
        "year": 2020,
        "rating": 5.0,
        "genre": "Suspenso/Thriller psicológico",
        "description": "Un joven se dedica a proteger a sus seres queridos...",
        "actors": ["Tom Holland", "Robert Pattinson"],
        "country": "USA",
        "income": 12000,
        "duration": 120
    }
])


> db.movies.insertOne({
    "titulo": "Blade: Trinity",
    "year": 2004,
    "rating": 4.7,
    "genre": "Acción/Terror",
    "description": "Blade, perseguido por el FBI, debe unir fuerzas con los cazavampiros para enfrentar...",
    "actors": ["Wesley Snipes", "Jessica Biel"],
    "country": "USA",
    "income":  132000000,
    "duration": 98
})

> db.movies.insertMany([
    {
        "titulo": "Deadpool",
        "year": 2016,
        "rating": 5,
        "genre": " Acción/Comedia",
        "description": "Un exmercenario quien, tras haber sido sometido a un cruel experimento...",
        "actors": ["Ryan Reynolds", "Morena Baccarin"],
        "country": "USA",
        "income": 783.1,
        "duration": 145
    },
    {
        "titulo": "Deadpool 2",
        "year": 2018,
        "rating": 3.2,
        "genre": "Acción/Comedia",
        "description": "Deadpool debe proteger a Russell, un adolescente mutante, de Cable...",
        "actors": ["Ryan Reynolds", "Morena Baccarin"],
        "country": "USA",
        "income": 785.8,
        "duration": 130
    }
])

4.Actualizar películas agregando el field highlighted = true a aquellas con rating > 4.5.
> db.movies.updateMany(
    {rating: {$gt: 5.0}},
    {$set: {highlighted: true}}
)

5.Actualizar películas cambiando el genre “drama” por “bored”.
> db.movies.updateMany(
    { genre: "Acción/Comedia" },
    { $set: { genre: "Acción"}}
)


6.Borrar todas las películas que tengan más de 30 años.
> db.movies.deleteMany({year: {$lt: new Date().getFullYear() - 30}})

7.Buscar todas las películas argentinas.
> db.movies.find({country: "USA"})

8.Buscar todas las películas de acción con un buen rating (ej. > 4.0) que hayan salido los últimos 2 años.
> db.movies.find({
    genre: "Action",
    rating: {$gt: 4.0},
    year: {$gt: new Date().getFullYear() - 2}
})


Actividad 3

1.Utilizar la misma base de datos de películas e insertar varias películas con distinto contenido.

2.Listar todas las películas del año 2018.
> db.movies.find({year: 2018})

3.Listar las 10 primeras películas de Hollywood.
> db.movies.find({country: "USA"}).limit(10).sort({year: 1})

4.Listar las 5 películas más taquilleras.
> db.movies.find().limit(5).sort({income: -1})

5.Listar el 2do conjunto de 5 películas más taquilleras.
> db.movies.find()
.skip(5)
.limit(5)
.sort({income: -1})

6.Repetir query 3 y 4 pero retornando sólo el título y genre.
> db.movies.find({country: "USA"}, {titulo: 1, genre:1, _id:0})
.limit(10)
.sort({year: 1})

> db.movies.find({}, {titulo: 1, genre: 1, _id: 0})
.limit(5)
.sort({income: -1})

7.Mostrar los distintos países que existen en la base de datos.
> db.movies.distinct("country")
